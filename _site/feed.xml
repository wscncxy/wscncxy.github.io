<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-12-11T23:51:10+08:00</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">JVM故障诊断与优化笔记四</title><link href="http://localhost:4000/jekyll/update/2012/12/16/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E5%9B%9B.html" rel="alternate" type="text/html" title="JVM故障诊断与优化笔记四" /><published>2012-12-16T20:10:54+08:00</published><updated>2012-12-16T20:10:54+08:00</updated><id>http://localhost:4000/jekyll/update/2012/12/16/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E5%9B%9B</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2012/12/16/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E5%9B%9B.html">&lt;h1 id=&quot;零参考资料&quot;&gt;零、参考资料&lt;/h1&gt;
&lt;p&gt;Java虚拟机规范(Java SE 8版)&lt;br /&gt;
Java语言规范基于Java SE 8&lt;br /&gt;
深入理解Java虚拟机——JVM高级特性与最佳实践&lt;br /&gt;
实战Java虚拟机——JVM故障诊断与性能优化&lt;br /&gt;
垃圾回收的算法与实现&lt;br /&gt;
深入理解计算机系统&lt;br /&gt;
Stackoverflow:&lt;br /&gt;
 https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections&lt;br /&gt;
OpenJdk：&lt;br /&gt;
 https://openjdk.java.net/jeps/122&lt;br /&gt;
Oracle官方DOC：&lt;br /&gt;
 https://docs.oracle.com/javase/8/javase-books.htm&lt;br /&gt;
 https://docs.oracle.com/en/java/javase/13/&lt;br /&gt;
 https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html&lt;/p&gt;

&lt;h1 id=&quot;一常用jvm参数&quot;&gt;一、常用JVM参数&lt;/h1&gt;
&lt;h2 id=&quot;1gc参数&quot;&gt;1.GC参数&lt;/h2&gt;
&lt;h3 id=&quot;11打印gc基本日志&quot;&gt;1.1.打印GC基本日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGC   JDK9+:  -Xlog:gc&lt;/p&gt;
&lt;h3 id=&quot;12打印gc详细日志&quot;&gt;1.2.打印GC详细日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCDetails   JDK9+:  -Xlog:gc*&lt;br /&gt;
-XX:PrintGCDetails 还会使JVM在退出前打印堆详细信息&lt;/p&gt;
&lt;h3 id=&quot;13打印gc时堆的全面信息&quot;&gt;1.3.打印GC时堆的全面信息&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintHeapAtGC  JDK9+:移除&lt;/p&gt;
&lt;h3 id=&quot;14打印gc发生时间&quot;&gt;1.4.打印GC发生时间&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCTimeStamps   JDK9+:  -Xlog:gc*已包含&lt;/p&gt;
&lt;h3 id=&quot;15打印程序执行时间&quot;&gt;1.5.打印程序执行时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationConcurrentTime&lt;/p&gt;
&lt;h3 id=&quot;16打印程序因stw而停顿的时间&quot;&gt;1.6.打印程序因STW而停顿的时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationStoppedTime&lt;/p&gt;
&lt;h3 id=&quot;17打印软引用弱引用虚引用和finallize队列信息&quot;&gt;1.7.打印软引用、弱引用、虚引用和Finallize队列信息&lt;/h3&gt;
&lt;p&gt;JDK8: +PrintReferenceGC   JDK9+移除&lt;/p&gt;
&lt;h3 id=&quot;18输出gc信息至文本&quot;&gt;1.8.输出GC信息至文本&lt;/h3&gt;
&lt;p&gt;JDK8:-Xloggc:log/${filePath}   JDK9+:-Xlog:gc:log/${filePath}&lt;/p&gt;
&lt;h3 id=&quot;19打印类加载日志&quot;&gt;1.9.打印类加载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassLoading  JDK9+:  -Xlog:class+load=info&lt;/p&gt;
&lt;h3 id=&quot;110打印类卸载日志&quot;&gt;1.10.打印类卸载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassUnLoading  JDK9+:  -Xlog:class+unload=info&lt;/p&gt;
&lt;h3 id=&quot;111显示当前的类信息柱状图&quot;&gt;1.11.显示当前的类信息柱状图&lt;/h3&gt;
&lt;p&gt;-XX:+PrintClassHistogram&lt;/p&gt;
&lt;h3 id=&quot;112查看jvm运行显示参数&quot;&gt;1.12.查看JVM运行显示参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintVMOptions&lt;/p&gt;
&lt;h3 id=&quot;113打印jvm显示和隐式默认参数&quot;&gt;1.13.打印JVM显示和隐式(默认)参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintCommandLineFlags&lt;/p&gt;
&lt;h3 id=&quot;114打印所有系统参数&quot;&gt;1.14.打印所有系统参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintFlagsFinal&lt;/p&gt;
&lt;h3 id=&quot;115在新生代和老年代使用串行回收器&quot;&gt;1.15.在新生代和老年代使用串行回收器&lt;/h3&gt;
&lt;p&gt;-XX:UseSerialGC&lt;/p&gt;
&lt;h3 id=&quot;116在新生代使用并行回收器&quot;&gt;1.16.在新生代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParNewGC&lt;/p&gt;
&lt;h3 id=&quot;117在老年代使用并行回收器&quot;&gt;1.17.在老年代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParallelOldGC&lt;/p&gt;
&lt;h3 id=&quot;118设置用于垃圾回收的线程数&quot;&gt;1.18.设置用于垃圾回收的线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelGCThreads&lt;/p&gt;
&lt;h3 id=&quot;119设置最大gc停顿时间&quot;&gt;1.19.设置最大GC停顿时间&lt;/h3&gt;
&lt;p&gt;-XX:MaxGCPauseMillis&lt;/p&gt;
&lt;h3 id=&quot;120设置吞吐量大小&quot;&gt;1.20.设置吞吐量大小&lt;/h3&gt;
&lt;p&gt;-XX:GCTimeRatio&lt;/p&gt;
&lt;h3 id=&quot;121打开开自适应gc策略&quot;&gt;1.21.打开开自适应GC策略&lt;/h3&gt;
&lt;p&gt;-XX:+UseAdaptiveSizePolicy&lt;/p&gt;
&lt;h3 id=&quot;122使用g1&quot;&gt;1.22.使用G1&lt;/h3&gt;
&lt;p&gt;-XX:+UseG1GC&lt;/p&gt;
&lt;h3 id=&quot;123设置停顿间隔&quot;&gt;1.23.设置停顿间隔&lt;/h3&gt;
&lt;p&gt;-XX:GCPauseIntervalMillis&lt;/p&gt;
&lt;h3 id=&quot;124使用cms&quot;&gt;1.24.使用CMS&lt;/h3&gt;
&lt;p&gt;-XX:+UseConcMarkSweepGC&lt;/p&gt;
&lt;h3 id=&quot;125设置cms线程数&quot;&gt;1.25.设置CMS线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelCMSThreads&lt;/p&gt;
&lt;h3 id=&quot;126设置cms触发时老年代比例&quot;&gt;1.26.设置CMS触发时，老年代比例&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;127设置cms在fullgc后是否进行碎片整理&quot;&gt;1.27.设置CMS在FullGC后是否进行碎片整理&lt;/h3&gt;
&lt;p&gt;-XX:+UseCMSCompactAtFullCollection&lt;/p&gt;
&lt;h3 id=&quot;128设置cms进行内存压缩前fullgc次数&quot;&gt;1.28.设置CMS进行内存压缩前，FullGC次数&lt;/h3&gt;
&lt;p&gt;-XX:CMSFullGCsBeforeCompaction&lt;/p&gt;
&lt;h3 id=&quot;129允许对类元数据回收&quot;&gt;1.29.允许对类元数据回收&lt;/h3&gt;
&lt;p&gt;-XX:+CMSClassUnloadingEnabled&lt;/p&gt;
&lt;h3 id=&quot;130设置cms触发时永久区比例仅在激活cmsclassunloadingenabled时有效&quot;&gt;1.30.设置CMS触发时，永久区比例,仅在激活CMSClassUnloadingEnabled时有效&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingPermOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;131只有达到阈值才执行cms-gc&quot;&gt;1.31.只有达到阈值才执行CMS GC&lt;/h3&gt;
&lt;p&gt;-XX:UseCMSInitiatingOccupancyOnly&lt;br /&gt;
##2.堆参数&lt;/p&gt;
&lt;h3 id=&quot;21初始堆空间&quot;&gt;2.1.初始堆空间&lt;/h3&gt;
&lt;p&gt;-Xms&lt;/p&gt;
&lt;h3 id=&quot;22最大堆空间&quot;&gt;2.2.最大堆空间&lt;/h3&gt;
&lt;p&gt;-Xmx&lt;/p&gt;
&lt;h3 id=&quot;23设置新生代大小&quot;&gt;2.3.设置新生代大小&lt;/h3&gt;
&lt;p&gt;-Xmn&lt;/p&gt;
&lt;h3 id=&quot;24设置新生代中eden区和fromto区的比例&quot;&gt;2.4.设置新生代中eden区和from/to区的比例&lt;/h3&gt;
&lt;p&gt;-XX:SurvivorRatio&lt;br /&gt;
SurvivorRatio=eden/from=eden/to&lt;/p&gt;
&lt;h3 id=&quot;25设置新生代与老年代的比例&quot;&gt;2.5.设置新生代与老年代的比例&lt;/h3&gt;
&lt;p&gt;-XX:NewRatio&lt;br /&gt;
NewRatio=老年代/新生代&lt;/p&gt;
&lt;h3 id=&quot;26设置在内存溢出时到处整个堆信息&quot;&gt;2.6.设置在内存溢出时到处整个堆信息&lt;/h3&gt;
&lt;p&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/p&gt;
&lt;h3 id=&quot;27设置导出堆文件存放路径&quot;&gt;2.7.设置导出堆文件存放路径&lt;/h3&gt;
&lt;p&gt;-XX:HeapDumpPath&lt;br /&gt;
与-XX:+HeapDumpOnOutOfMemoryError配合&lt;/p&gt;
&lt;h3 id=&quot;28设置大对象直接进入老年代的阈值&quot;&gt;2.8.设置大对象直接进入老年代的阈值&lt;/h3&gt;
&lt;p&gt;-XX:MaxTenuringThreshold&lt;br /&gt;
##3.	非堆参数&lt;/p&gt;
&lt;h3 id=&quot;31最大直接内存&quot;&gt;3.1.最大直接内存&lt;/h3&gt;
&lt;p&gt;-XX:MaxDirectMemorySize&lt;br /&gt;
如果不设置，则默认与-Xmx相同&lt;/p&gt;
&lt;h3 id=&quot;32每个线程的栈大小&quot;&gt;3.2.每个线程的栈大小&lt;/h3&gt;
&lt;p&gt;-Xss&lt;/p&gt;
&lt;h3 id=&quot;33打开tlab&quot;&gt;3.3.打开TLAB&lt;/h3&gt;
&lt;p&gt;-XX:+UseTLAB&lt;/p&gt;
&lt;h3 id=&quot;34打印tlab相关信息&quot;&gt;3.4.打印TLAB相关信息&lt;/h3&gt;
&lt;p&gt;-XX:+PrintTLAB&lt;br /&gt;
JDK9+不支持&lt;/p&gt;
&lt;h3 id=&quot;35tlab大小设置&quot;&gt;3.5.TLAB大小设置&lt;/h3&gt;
&lt;p&gt;-XX:TLABSize&lt;/p&gt;
&lt;h3 id=&quot;36设置tlab大小自动调整&quot;&gt;3.6.设置TLAB大小自动调整&lt;/h3&gt;
&lt;p&gt;-XX:+ResizeTLAB&lt;br /&gt;
##4.其他参数&lt;/p&gt;
&lt;h3 id=&quot;41设置工作模式为客户端&quot;&gt;4.1.设置工作模式为客户端&lt;/h3&gt;
&lt;p&gt;-client&lt;/p&gt;
&lt;h3 id=&quot;42设置工作模式为服务端&quot;&gt;4.2.设置工作模式为服务端&lt;/h3&gt;
&lt;p&gt;-server&lt;/p&gt;
&lt;h3 id=&quot;43禁用systemgc显示gc&quot;&gt;4.3.禁用System.gc()（显示GC）&lt;/h3&gt;
&lt;p&gt;-XX:+DisableExplicitGC&lt;/p&gt;
&lt;h3 id=&quot;44设置并发处理显示gc&quot;&gt;4.4.设置并发处理显示GC&lt;/h3&gt;
&lt;p&gt;-XX:+ExplicitGCInvokesConcurrent&lt;/p&gt;
&lt;h3 id=&quot;45后台编译&quot;&gt;4.5.后台编译&lt;/h3&gt;
&lt;p&gt;-XX:+BackgroundCompilation&lt;/p&gt;
&lt;h3 id=&quot;46开启逃逸分析&quot;&gt;4.6.开启逃逸分析&lt;/h3&gt;
&lt;p&gt;-XX:+DoEscapeAnalysis&lt;br /&gt;
仅在server模式下有效&lt;/p&gt;
&lt;h3 id=&quot;47打开标量替换&quot;&gt;4.7.打开标量替换&lt;/h3&gt;
&lt;p&gt;-XX:+EliminateAllocation&lt;/p&gt;
&lt;h3 id=&quot;48开启解释执行模式&quot;&gt;4.8.开启解释执行模式&lt;/h3&gt;
&lt;p&gt;-Xint&lt;/p&gt;
&lt;h3 id=&quot;49开启编译模式&quot;&gt;4.9.开启编译模式&lt;/h3&gt;
&lt;p&gt;-Xcomp&lt;/p&gt;
&lt;h3 id=&quot;410开启混合模式民&quot;&gt;4.10.开启混合模式民，&lt;/h3&gt;
&lt;p&gt;-Xmixed&lt;/p&gt;</content><author><name></name></author><summary type="html">零、参考资料 Java虚拟机规范(Java SE 8版) Java语言规范基于Java SE 8 深入理解Java虚拟机——JVM高级特性与最佳实践 实战Java虚拟机——JVM故障诊断与性能优化 垃圾回收的算法与实现 深入理解计算机系统 Stackoverflow:  https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections OpenJdk：  https://openjdk.java.net/jeps/122 Oracle官方DOC：  https://docs.oracle.com/javase/8/javase-books.htm  https://docs.oracle.com/en/java/javase/13/  https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html</summary></entry><entry><title type="html">JVM故障诊断与优化笔记五</title><link href="http://localhost:4000/jekyll/update/2012/12/15/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%BA%94.html" rel="alternate" type="text/html" title="JVM故障诊断与优化笔记五" /><published>2012-12-15T20:10:54+08:00</published><updated>2012-12-15T20:10:54+08:00</updated><id>http://localhost:4000/jekyll/update/2012/12/15/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%BA%94</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2012/12/15/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%BA%94.html">&lt;h1 id=&quot;零参考资料&quot;&gt;零、参考资料&lt;/h1&gt;
&lt;p&gt;Java虚拟机规范(Java SE 8版)&lt;br /&gt;
Java语言规范基于Java SE 8&lt;br /&gt;
深入理解Java虚拟机——JVM高级特性与最佳实践&lt;br /&gt;
实战Java虚拟机——JVM故障诊断与性能优化&lt;br /&gt;
垃圾回收的算法与实现&lt;br /&gt;
深入理解计算机系统&lt;br /&gt;
Stackoverflow:&lt;br /&gt;
 https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections&lt;br /&gt;
OpenJdk：&lt;br /&gt;
 https://openjdk.java.net/jeps/122&lt;br /&gt;
Oracle官方DOC：&lt;br /&gt;
 https://docs.oracle.com/javase/8/javase-books.htm&lt;br /&gt;
 https://docs.oracle.com/en/java/javase/13/&lt;br /&gt;
 https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html&lt;/p&gt;

&lt;h1 id=&quot;一常用jvm参数&quot;&gt;一、常用JVM参数&lt;/h1&gt;
&lt;h2 id=&quot;1gc参数&quot;&gt;1.GC参数&lt;/h2&gt;
&lt;h3 id=&quot;11打印gc基本日志&quot;&gt;1.1.打印GC基本日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGC   JDK9+:  -Xlog:gc&lt;/p&gt;
&lt;h3 id=&quot;12打印gc详细日志&quot;&gt;1.2.打印GC详细日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCDetails   JDK9+:  -Xlog:gc*&lt;br /&gt;
-XX:PrintGCDetails 还会使JVM在退出前打印堆详细信息&lt;/p&gt;
&lt;h3 id=&quot;13打印gc时堆的全面信息&quot;&gt;1.3.打印GC时堆的全面信息&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintHeapAtGC  JDK9+:移除&lt;/p&gt;
&lt;h3 id=&quot;14打印gc发生时间&quot;&gt;1.4.打印GC发生时间&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCTimeStamps   JDK9+:  -Xlog:gc*已包含&lt;/p&gt;
&lt;h3 id=&quot;15打印程序执行时间&quot;&gt;1.5.打印程序执行时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationConcurrentTime&lt;/p&gt;
&lt;h3 id=&quot;16打印程序因stw而停顿的时间&quot;&gt;1.6.打印程序因STW而停顿的时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationStoppedTime&lt;/p&gt;
&lt;h3 id=&quot;17打印软引用弱引用虚引用和finallize队列信息&quot;&gt;1.7.打印软引用、弱引用、虚引用和Finallize队列信息&lt;/h3&gt;
&lt;p&gt;JDK8: +PrintReferenceGC   JDK9+移除&lt;/p&gt;
&lt;h3 id=&quot;18输出gc信息至文本&quot;&gt;1.8.输出GC信息至文本&lt;/h3&gt;
&lt;p&gt;JDK8:-Xloggc:log/${filePath}   JDK9+:-Xlog:gc:log/${filePath}&lt;/p&gt;
&lt;h3 id=&quot;19打印类加载日志&quot;&gt;1.9.打印类加载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassLoading  JDK9+:  -Xlog:class+load=info&lt;/p&gt;
&lt;h3 id=&quot;110打印类卸载日志&quot;&gt;1.10.打印类卸载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassUnLoading  JDK9+:  -Xlog:class+unload=info&lt;/p&gt;
&lt;h3 id=&quot;111显示当前的类信息柱状图&quot;&gt;1.11.显示当前的类信息柱状图&lt;/h3&gt;
&lt;p&gt;-XX:+PrintClassHistogram&lt;/p&gt;
&lt;h3 id=&quot;112查看jvm运行显示参数&quot;&gt;1.12.查看JVM运行显示参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintVMOptions&lt;/p&gt;
&lt;h3 id=&quot;113打印jvm显示和隐式默认参数&quot;&gt;1.13.打印JVM显示和隐式(默认)参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintCommandLineFlags&lt;/p&gt;
&lt;h3 id=&quot;114打印所有系统参数&quot;&gt;1.14.打印所有系统参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintFlagsFinal&lt;/p&gt;
&lt;h3 id=&quot;115在新生代和老年代使用串行回收器&quot;&gt;1.15.在新生代和老年代使用串行回收器&lt;/h3&gt;
&lt;p&gt;-XX:UseSerialGC&lt;/p&gt;
&lt;h3 id=&quot;116在新生代使用并行回收器&quot;&gt;1.16.在新生代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParNewGC&lt;/p&gt;
&lt;h3 id=&quot;117在老年代使用并行回收器&quot;&gt;1.17.在老年代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParallelOldGC&lt;/p&gt;
&lt;h3 id=&quot;118设置用于垃圾回收的线程数&quot;&gt;1.18.设置用于垃圾回收的线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelGCThreads&lt;/p&gt;
&lt;h3 id=&quot;119设置最大gc停顿时间&quot;&gt;1.19.设置最大GC停顿时间&lt;/h3&gt;
&lt;p&gt;-XX:MaxGCPauseMillis&lt;/p&gt;
&lt;h3 id=&quot;120设置吞吐量大小&quot;&gt;1.20.设置吞吐量大小&lt;/h3&gt;
&lt;p&gt;-XX:GCTimeRatio&lt;/p&gt;
&lt;h3 id=&quot;121打开开自适应gc策略&quot;&gt;1.21.打开开自适应GC策略&lt;/h3&gt;
&lt;p&gt;-XX:+UseAdaptiveSizePolicy&lt;/p&gt;
&lt;h3 id=&quot;122使用g1&quot;&gt;1.22.使用G1&lt;/h3&gt;
&lt;p&gt;-XX:+UseG1GC&lt;/p&gt;
&lt;h3 id=&quot;123设置停顿间隔&quot;&gt;1.23.设置停顿间隔&lt;/h3&gt;
&lt;p&gt;-XX:GCPauseIntervalMillis&lt;/p&gt;
&lt;h3 id=&quot;124使用cms&quot;&gt;1.24.使用CMS&lt;/h3&gt;
&lt;p&gt;-XX:+UseConcMarkSweepGC&lt;/p&gt;
&lt;h3 id=&quot;125设置cms线程数&quot;&gt;1.25.设置CMS线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelCMSThreads&lt;/p&gt;
&lt;h3 id=&quot;126设置cms触发时老年代比例&quot;&gt;1.26.设置CMS触发时，老年代比例&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;127设置cms在fullgc后是否进行碎片整理&quot;&gt;1.27.设置CMS在FullGC后是否进行碎片整理&lt;/h3&gt;
&lt;p&gt;-XX:+UseCMSCompactAtFullCollection&lt;/p&gt;
&lt;h3 id=&quot;128设置cms进行内存压缩前fullgc次数&quot;&gt;1.28.设置CMS进行内存压缩前，FullGC次数&lt;/h3&gt;
&lt;p&gt;-XX:CMSFullGCsBeforeCompaction&lt;/p&gt;
&lt;h3 id=&quot;129允许对类元数据回收&quot;&gt;1.29.允许对类元数据回收&lt;/h3&gt;
&lt;p&gt;-XX:+CMSClassUnloadingEnabled&lt;/p&gt;
&lt;h3 id=&quot;130设置cms触发时永久区比例仅在激活cmsclassunloadingenabled时有效&quot;&gt;1.30.设置CMS触发时，永久区比例,仅在激活CMSClassUnloadingEnabled时有效&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingPermOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;131只有达到阈值才执行cms-gc&quot;&gt;1.31.只有达到阈值才执行CMS GC&lt;/h3&gt;
&lt;p&gt;-XX:UseCMSInitiatingOccupancyOnly&lt;br /&gt;
##2.堆参数&lt;/p&gt;
&lt;h3 id=&quot;21初始堆空间&quot;&gt;2.1.初始堆空间&lt;/h3&gt;
&lt;p&gt;-Xms&lt;/p&gt;
&lt;h3 id=&quot;22最大堆空间&quot;&gt;2.2.最大堆空间&lt;/h3&gt;
&lt;p&gt;-Xmx&lt;/p&gt;
&lt;h3 id=&quot;23设置新生代大小&quot;&gt;2.3.设置新生代大小&lt;/h3&gt;
&lt;p&gt;-Xmn&lt;/p&gt;
&lt;h3 id=&quot;24设置新生代中eden区和fromto区的比例&quot;&gt;2.4.设置新生代中eden区和from/to区的比例&lt;/h3&gt;
&lt;p&gt;-XX:SurvivorRatio&lt;br /&gt;
SurvivorRatio=eden/from=eden/to&lt;/p&gt;
&lt;h3 id=&quot;25设置新生代与老年代的比例&quot;&gt;2.5.设置新生代与老年代的比例&lt;/h3&gt;
&lt;p&gt;-XX:NewRatio&lt;br /&gt;
NewRatio=老年代/新生代&lt;/p&gt;
&lt;h3 id=&quot;26设置在内存溢出时到处整个堆信息&quot;&gt;2.6.设置在内存溢出时到处整个堆信息&lt;/h3&gt;
&lt;p&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/p&gt;
&lt;h3 id=&quot;27设置导出堆文件存放路径&quot;&gt;2.7.设置导出堆文件存放路径&lt;/h3&gt;
&lt;p&gt;-XX:HeapDumpPath&lt;br /&gt;
与-XX:+HeapDumpOnOutOfMemoryError配合&lt;/p&gt;
&lt;h3 id=&quot;28设置大对象直接进入老年代的阈值&quot;&gt;2.8.设置大对象直接进入老年代的阈值&lt;/h3&gt;
&lt;p&gt;-XX:MaxTenuringThreshold&lt;br /&gt;
##3.	非堆参数&lt;/p&gt;
&lt;h3 id=&quot;31最大直接内存&quot;&gt;3.1.最大直接内存&lt;/h3&gt;
&lt;p&gt;-XX:MaxDirectMemorySize&lt;br /&gt;
如果不设置，则默认与-Xmx相同&lt;/p&gt;
&lt;h3 id=&quot;32每个线程的栈大小&quot;&gt;3.2.每个线程的栈大小&lt;/h3&gt;
&lt;p&gt;-Xss&lt;/p&gt;
&lt;h3 id=&quot;33打开tlab&quot;&gt;3.3.打开TLAB&lt;/h3&gt;
&lt;p&gt;-XX:+UseTLAB&lt;/p&gt;
&lt;h3 id=&quot;34打印tlab相关信息&quot;&gt;3.4.打印TLAB相关信息&lt;/h3&gt;
&lt;p&gt;-XX:+PrintTLAB&lt;br /&gt;
JDK9+不支持&lt;/p&gt;
&lt;h3 id=&quot;35tlab大小设置&quot;&gt;3.5.TLAB大小设置&lt;/h3&gt;
&lt;p&gt;-XX:TLABSize&lt;/p&gt;
&lt;h3 id=&quot;36设置tlab大小自动调整&quot;&gt;3.6.设置TLAB大小自动调整&lt;/h3&gt;
&lt;p&gt;-XX:+ResizeTLAB&lt;br /&gt;
##4.其他参数&lt;/p&gt;
&lt;h3 id=&quot;41设置工作模式为客户端&quot;&gt;4.1.设置工作模式为客户端&lt;/h3&gt;
&lt;p&gt;-client&lt;/p&gt;
&lt;h3 id=&quot;42设置工作模式为服务端&quot;&gt;4.2.设置工作模式为服务端&lt;/h3&gt;
&lt;p&gt;-server&lt;/p&gt;
&lt;h3 id=&quot;43禁用systemgc显示gc&quot;&gt;4.3.禁用System.gc()（显示GC）&lt;/h3&gt;
&lt;p&gt;-XX:+DisableExplicitGC&lt;/p&gt;
&lt;h3 id=&quot;44设置并发处理显示gc&quot;&gt;4.4.设置并发处理显示GC&lt;/h3&gt;
&lt;p&gt;-XX:+ExplicitGCInvokesConcurrent&lt;/p&gt;
&lt;h3 id=&quot;45后台编译&quot;&gt;4.5.后台编译&lt;/h3&gt;
&lt;p&gt;-XX:+BackgroundCompilation&lt;/p&gt;
&lt;h3 id=&quot;46开启逃逸分析&quot;&gt;4.6.开启逃逸分析&lt;/h3&gt;
&lt;p&gt;-XX:+DoEscapeAnalysis&lt;br /&gt;
仅在server模式下有效&lt;/p&gt;
&lt;h3 id=&quot;47打开标量替换&quot;&gt;4.7.打开标量替换&lt;/h3&gt;
&lt;p&gt;-XX:+EliminateAllocation&lt;/p&gt;
&lt;h3 id=&quot;48开启解释执行模式&quot;&gt;4.8.开启解释执行模式&lt;/h3&gt;
&lt;p&gt;-Xint&lt;/p&gt;
&lt;h3 id=&quot;49开启编译模式&quot;&gt;4.9.开启编译模式&lt;/h3&gt;
&lt;p&gt;-Xcomp&lt;/p&gt;
&lt;h3 id=&quot;410开启混合模式民&quot;&gt;4.10.开启混合模式民，&lt;/h3&gt;
&lt;p&gt;-Xmixed&lt;/p&gt;</content><author><name></name></author><summary type="html">零、参考资料 Java虚拟机规范(Java SE 8版) Java语言规范基于Java SE 8 深入理解Java虚拟机——JVM高级特性与最佳实践 实战Java虚拟机——JVM故障诊断与性能优化 垃圾回收的算法与实现 深入理解计算机系统 Stackoverflow:  https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections OpenJdk：  https://openjdk.java.net/jeps/122 Oracle官方DOC：  https://docs.oracle.com/javase/8/javase-books.htm  https://docs.oracle.com/en/java/javase/13/  https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html</summary></entry><entry><title type="html">JVM故障诊断与优化笔记三</title><link href="http://localhost:4000/jekyll/update/2012/12/14/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%B8%89.html" rel="alternate" type="text/html" title="JVM故障诊断与优化笔记三" /><published>2012-12-14T20:10:54+08:00</published><updated>2012-12-14T20:10:54+08:00</updated><id>http://localhost:4000/jekyll/update/2012/12/14/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%B8%89</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2012/12/14/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%B8%89.html">&lt;h1 id=&quot;零参考资料&quot;&gt;零、参考资料&lt;/h1&gt;
&lt;p&gt;Java虚拟机规范(Java SE 8版)&lt;br /&gt;
Java语言规范基于Java SE 8&lt;br /&gt;
深入理解Java虚拟机——JVM高级特性与最佳实践&lt;br /&gt;
实战Java虚拟机——JVM故障诊断与性能优化&lt;br /&gt;
垃圾回收的算法与实现&lt;br /&gt;
深入理解计算机系统&lt;br /&gt;
Stackoverflow:&lt;br /&gt;
 https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections&lt;br /&gt;
OpenJdk：&lt;br /&gt;
 https://openjdk.java.net/jeps/122&lt;br /&gt;
Oracle官方DOC：&lt;br /&gt;
 https://docs.oracle.com/javase/8/javase-books.htm&lt;br /&gt;
 https://docs.oracle.com/en/java/javase/13/&lt;br /&gt;
 https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html&lt;/p&gt;

&lt;h1 id=&quot;一常用jvm参数&quot;&gt;一、常用JVM参数&lt;/h1&gt;
&lt;h2 id=&quot;1gc参数&quot;&gt;1.GC参数&lt;/h2&gt;
&lt;h3 id=&quot;11打印gc基本日志&quot;&gt;1.1.打印GC基本日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGC   JDK9+:  -Xlog:gc&lt;/p&gt;
&lt;h3 id=&quot;12打印gc详细日志&quot;&gt;1.2.打印GC详细日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCDetails   JDK9+:  -Xlog:gc*&lt;br /&gt;
-XX:PrintGCDetails 还会使JVM在退出前打印堆详细信息&lt;/p&gt;
&lt;h3 id=&quot;13打印gc时堆的全面信息&quot;&gt;1.3.打印GC时堆的全面信息&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintHeapAtGC  JDK9+:移除&lt;/p&gt;
&lt;h3 id=&quot;14打印gc发生时间&quot;&gt;1.4.打印GC发生时间&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCTimeStamps   JDK9+:  -Xlog:gc*已包含&lt;/p&gt;
&lt;h3 id=&quot;15打印程序执行时间&quot;&gt;1.5.打印程序执行时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationConcurrentTime&lt;/p&gt;
&lt;h3 id=&quot;16打印程序因stw而停顿的时间&quot;&gt;1.6.打印程序因STW而停顿的时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationStoppedTime&lt;/p&gt;
&lt;h3 id=&quot;17打印软引用弱引用虚引用和finallize队列信息&quot;&gt;1.7.打印软引用、弱引用、虚引用和Finallize队列信息&lt;/h3&gt;
&lt;p&gt;JDK8: +PrintReferenceGC   JDK9+移除&lt;/p&gt;
&lt;h3 id=&quot;18输出gc信息至文本&quot;&gt;1.8.输出GC信息至文本&lt;/h3&gt;
&lt;p&gt;JDK8:-Xloggc:log/${filePath}   JDK9+:-Xlog:gc:log/${filePath}&lt;/p&gt;
&lt;h3 id=&quot;19打印类加载日志&quot;&gt;1.9.打印类加载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassLoading  JDK9+:  -Xlog:class+load=info&lt;/p&gt;
&lt;h3 id=&quot;110打印类卸载日志&quot;&gt;1.10.打印类卸载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassUnLoading  JDK9+:  -Xlog:class+unload=info&lt;/p&gt;
&lt;h3 id=&quot;111显示当前的类信息柱状图&quot;&gt;1.11.显示当前的类信息柱状图&lt;/h3&gt;
&lt;p&gt;-XX:+PrintClassHistogram&lt;/p&gt;
&lt;h3 id=&quot;112查看jvm运行显示参数&quot;&gt;1.12.查看JVM运行显示参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintVMOptions&lt;/p&gt;
&lt;h3 id=&quot;113打印jvm显示和隐式默认参数&quot;&gt;1.13.打印JVM显示和隐式(默认)参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintCommandLineFlags&lt;/p&gt;
&lt;h3 id=&quot;114打印所有系统参数&quot;&gt;1.14.打印所有系统参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintFlagsFinal&lt;/p&gt;
&lt;h3 id=&quot;115在新生代和老年代使用串行回收器&quot;&gt;1.15.在新生代和老年代使用串行回收器&lt;/h3&gt;
&lt;p&gt;-XX:UseSerialGC&lt;/p&gt;
&lt;h3 id=&quot;116在新生代使用并行回收器&quot;&gt;1.16.在新生代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParNewGC&lt;/p&gt;
&lt;h3 id=&quot;117在老年代使用并行回收器&quot;&gt;1.17.在老年代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParallelOldGC&lt;/p&gt;
&lt;h3 id=&quot;118设置用于垃圾回收的线程数&quot;&gt;1.18.设置用于垃圾回收的线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelGCThreads&lt;/p&gt;
&lt;h3 id=&quot;119设置最大gc停顿时间&quot;&gt;1.19.设置最大GC停顿时间&lt;/h3&gt;
&lt;p&gt;-XX:MaxGCPauseMillis&lt;/p&gt;
&lt;h3 id=&quot;120设置吞吐量大小&quot;&gt;1.20.设置吞吐量大小&lt;/h3&gt;
&lt;p&gt;-XX:GCTimeRatio&lt;/p&gt;
&lt;h3 id=&quot;121打开开自适应gc策略&quot;&gt;1.21.打开开自适应GC策略&lt;/h3&gt;
&lt;p&gt;-XX:+UseAdaptiveSizePolicy&lt;/p&gt;
&lt;h3 id=&quot;122使用g1&quot;&gt;1.22.使用G1&lt;/h3&gt;
&lt;p&gt;-XX:+UseG1GC&lt;/p&gt;
&lt;h3 id=&quot;123设置停顿间隔&quot;&gt;1.23.设置停顿间隔&lt;/h3&gt;
&lt;p&gt;-XX:GCPauseIntervalMillis&lt;/p&gt;
&lt;h3 id=&quot;124使用cms&quot;&gt;1.24.使用CMS&lt;/h3&gt;
&lt;p&gt;-XX:+UseConcMarkSweepGC&lt;/p&gt;
&lt;h3 id=&quot;125设置cms线程数&quot;&gt;1.25.设置CMS线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelCMSThreads&lt;/p&gt;
&lt;h3 id=&quot;126设置cms触发时老年代比例&quot;&gt;1.26.设置CMS触发时，老年代比例&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;127设置cms在fullgc后是否进行碎片整理&quot;&gt;1.27.设置CMS在FullGC后是否进行碎片整理&lt;/h3&gt;
&lt;p&gt;-XX:+UseCMSCompactAtFullCollection&lt;/p&gt;
&lt;h3 id=&quot;128设置cms进行内存压缩前fullgc次数&quot;&gt;1.28.设置CMS进行内存压缩前，FullGC次数&lt;/h3&gt;
&lt;p&gt;-XX:CMSFullGCsBeforeCompaction&lt;/p&gt;
&lt;h3 id=&quot;129允许对类元数据回收&quot;&gt;1.29.允许对类元数据回收&lt;/h3&gt;
&lt;p&gt;-XX:+CMSClassUnloadingEnabled&lt;/p&gt;
&lt;h3 id=&quot;130设置cms触发时永久区比例仅在激活cmsclassunloadingenabled时有效&quot;&gt;1.30.设置CMS触发时，永久区比例,仅在激活CMSClassUnloadingEnabled时有效&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingPermOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;131只有达到阈值才执行cms-gc&quot;&gt;1.31.只有达到阈值才执行CMS GC&lt;/h3&gt;
&lt;p&gt;-XX:UseCMSInitiatingOccupancyOnly&lt;br /&gt;
##2.堆参数&lt;/p&gt;
&lt;h3 id=&quot;21初始堆空间&quot;&gt;2.1.初始堆空间&lt;/h3&gt;
&lt;p&gt;-Xms&lt;/p&gt;
&lt;h3 id=&quot;22最大堆空间&quot;&gt;2.2.最大堆空间&lt;/h3&gt;
&lt;p&gt;-Xmx&lt;/p&gt;
&lt;h3 id=&quot;23设置新生代大小&quot;&gt;2.3.设置新生代大小&lt;/h3&gt;
&lt;p&gt;-Xmn&lt;/p&gt;
&lt;h3 id=&quot;24设置新生代中eden区和fromto区的比例&quot;&gt;2.4.设置新生代中eden区和from/to区的比例&lt;/h3&gt;
&lt;p&gt;-XX:SurvivorRatio&lt;br /&gt;
SurvivorRatio=eden/from=eden/to&lt;/p&gt;
&lt;h3 id=&quot;25设置新生代与老年代的比例&quot;&gt;2.5.设置新生代与老年代的比例&lt;/h3&gt;
&lt;p&gt;-XX:NewRatio&lt;br /&gt;
NewRatio=老年代/新生代&lt;/p&gt;
&lt;h3 id=&quot;26设置在内存溢出时到处整个堆信息&quot;&gt;2.6.设置在内存溢出时到处整个堆信息&lt;/h3&gt;
&lt;p&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/p&gt;
&lt;h3 id=&quot;27设置导出堆文件存放路径&quot;&gt;2.7.设置导出堆文件存放路径&lt;/h3&gt;
&lt;p&gt;-XX:HeapDumpPath&lt;br /&gt;
与-XX:+HeapDumpOnOutOfMemoryError配合&lt;/p&gt;
&lt;h3 id=&quot;28设置大对象直接进入老年代的阈值&quot;&gt;2.8.设置大对象直接进入老年代的阈值&lt;/h3&gt;
&lt;p&gt;-XX:MaxTenuringThreshold&lt;br /&gt;
##3.	非堆参数&lt;/p&gt;
&lt;h3 id=&quot;31最大直接内存&quot;&gt;3.1.最大直接内存&lt;/h3&gt;
&lt;p&gt;-XX:MaxDirectMemorySize&lt;br /&gt;
如果不设置，则默认与-Xmx相同&lt;/p&gt;
&lt;h3 id=&quot;32每个线程的栈大小&quot;&gt;3.2.每个线程的栈大小&lt;/h3&gt;
&lt;p&gt;-Xss&lt;/p&gt;
&lt;h3 id=&quot;33打开tlab&quot;&gt;3.3.打开TLAB&lt;/h3&gt;
&lt;p&gt;-XX:+UseTLAB&lt;/p&gt;
&lt;h3 id=&quot;34打印tlab相关信息&quot;&gt;3.4.打印TLAB相关信息&lt;/h3&gt;
&lt;p&gt;-XX:+PrintTLAB&lt;br /&gt;
JDK9+不支持&lt;/p&gt;
&lt;h3 id=&quot;35tlab大小设置&quot;&gt;3.5.TLAB大小设置&lt;/h3&gt;
&lt;p&gt;-XX:TLABSize&lt;/p&gt;
&lt;h3 id=&quot;36设置tlab大小自动调整&quot;&gt;3.6.设置TLAB大小自动调整&lt;/h3&gt;
&lt;p&gt;-XX:+ResizeTLAB&lt;br /&gt;
##4.其他参数&lt;/p&gt;
&lt;h3 id=&quot;41设置工作模式为客户端&quot;&gt;4.1.设置工作模式为客户端&lt;/h3&gt;
&lt;p&gt;-client&lt;/p&gt;
&lt;h3 id=&quot;42设置工作模式为服务端&quot;&gt;4.2.设置工作模式为服务端&lt;/h3&gt;
&lt;p&gt;-server&lt;/p&gt;
&lt;h3 id=&quot;43禁用systemgc显示gc&quot;&gt;4.3.禁用System.gc()（显示GC）&lt;/h3&gt;
&lt;p&gt;-XX:+DisableExplicitGC&lt;/p&gt;
&lt;h3 id=&quot;44设置并发处理显示gc&quot;&gt;4.4.设置并发处理显示GC&lt;/h3&gt;
&lt;p&gt;-XX:+ExplicitGCInvokesConcurrent&lt;/p&gt;
&lt;h3 id=&quot;45后台编译&quot;&gt;4.5.后台编译&lt;/h3&gt;
&lt;p&gt;-XX:+BackgroundCompilation&lt;/p&gt;
&lt;h3 id=&quot;46开启逃逸分析&quot;&gt;4.6.开启逃逸分析&lt;/h3&gt;
&lt;p&gt;-XX:+DoEscapeAnalysis&lt;br /&gt;
仅在server模式下有效&lt;/p&gt;
&lt;h3 id=&quot;47打开标量替换&quot;&gt;4.7.打开标量替换&lt;/h3&gt;
&lt;p&gt;-XX:+EliminateAllocation&lt;/p&gt;
&lt;h3 id=&quot;48开启解释执行模式&quot;&gt;4.8.开启解释执行模式&lt;/h3&gt;
&lt;p&gt;-Xint&lt;/p&gt;
&lt;h3 id=&quot;49开启编译模式&quot;&gt;4.9.开启编译模式&lt;/h3&gt;
&lt;p&gt;-Xcomp&lt;/p&gt;
&lt;h3 id=&quot;410开启混合模式民&quot;&gt;4.10.开启混合模式民，&lt;/h3&gt;
&lt;p&gt;-Xmixed&lt;/p&gt;</content><author><name></name></author><summary type="html">零、参考资料 Java虚拟机规范(Java SE 8版) Java语言规范基于Java SE 8 深入理解Java虚拟机——JVM高级特性与最佳实践 实战Java虚拟机——JVM故障诊断与性能优化 垃圾回收的算法与实现 深入理解计算机系统 Stackoverflow:  https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections OpenJdk：  https://openjdk.java.net/jeps/122 Oracle官方DOC：  https://docs.oracle.com/javase/8/javase-books.htm  https://docs.oracle.com/en/java/javase/13/  https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html</summary></entry><entry><title type="html">JVM故障诊断与优化笔记二</title><link href="http://localhost:4000/jekyll/update/2012/12/13/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%BA%8C.html" rel="alternate" type="text/html" title="JVM故障诊断与优化笔记二" /><published>2012-12-13T20:10:54+08:00</published><updated>2012-12-13T20:10:54+08:00</updated><id>http://localhost:4000/jekyll/update/2012/12/13/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%BA%8C</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2012/12/13/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%BA%8C.html">&lt;h1 id=&quot;零参考资料&quot;&gt;零、参考资料&lt;/h1&gt;
&lt;p&gt;Java虚拟机规范(Java SE 8版)&lt;br /&gt;
Java语言规范基于Java SE 8&lt;br /&gt;
深入理解Java虚拟机——JVM高级特性与最佳实践&lt;br /&gt;
实战Java虚拟机——JVM故障诊断与性能优化&lt;br /&gt;
垃圾回收的算法与实现&lt;br /&gt;
深入理解计算机系统&lt;br /&gt;
Stackoverflow:&lt;br /&gt;
 https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections&lt;br /&gt;
OpenJdk：&lt;br /&gt;
 https://openjdk.java.net/jeps/122&lt;br /&gt;
Oracle官方DOC：&lt;br /&gt;
 https://docs.oracle.com/javase/8/javase-books.htm&lt;br /&gt;
 https://docs.oracle.com/en/java/javase/13/&lt;br /&gt;
 https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html&lt;/p&gt;

&lt;h1 id=&quot;一常用jvm参数&quot;&gt;一、常用JVM参数&lt;/h1&gt;
&lt;h2 id=&quot;1gc参数&quot;&gt;1.GC参数&lt;/h2&gt;
&lt;h3 id=&quot;11打印gc基本日志&quot;&gt;1.1.打印GC基本日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGC   JDK9+:  -Xlog:gc&lt;/p&gt;
&lt;h3 id=&quot;12打印gc详细日志&quot;&gt;1.2.打印GC详细日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCDetails   JDK9+:  -Xlog:gc*&lt;br /&gt;
-XX:PrintGCDetails 还会使JVM在退出前打印堆详细信息&lt;/p&gt;
&lt;h3 id=&quot;13打印gc时堆的全面信息&quot;&gt;1.3.打印GC时堆的全面信息&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintHeapAtGC  JDK9+:移除&lt;/p&gt;
&lt;h3 id=&quot;14打印gc发生时间&quot;&gt;1.4.打印GC发生时间&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCTimeStamps   JDK9+:  -Xlog:gc*已包含&lt;/p&gt;
&lt;h3 id=&quot;15打印程序执行时间&quot;&gt;1.5.打印程序执行时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationConcurrentTime&lt;/p&gt;
&lt;h3 id=&quot;16打印程序因stw而停顿的时间&quot;&gt;1.6.打印程序因STW而停顿的时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationStoppedTime&lt;/p&gt;
&lt;h3 id=&quot;17打印软引用弱引用虚引用和finallize队列信息&quot;&gt;1.7.打印软引用、弱引用、虚引用和Finallize队列信息&lt;/h3&gt;
&lt;p&gt;JDK8: +PrintReferenceGC   JDK9+移除&lt;/p&gt;
&lt;h3 id=&quot;18输出gc信息至文本&quot;&gt;1.8.输出GC信息至文本&lt;/h3&gt;
&lt;p&gt;JDK8:-Xloggc:log/${filePath}   JDK9+:-Xlog:gc:log/${filePath}&lt;/p&gt;
&lt;h3 id=&quot;19打印类加载日志&quot;&gt;1.9.打印类加载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassLoading  JDK9+:  -Xlog:class+load=info&lt;/p&gt;
&lt;h3 id=&quot;110打印类卸载日志&quot;&gt;1.10.打印类卸载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassUnLoading  JDK9+:  -Xlog:class+unload=info&lt;/p&gt;
&lt;h3 id=&quot;111显示当前的类信息柱状图&quot;&gt;1.11.显示当前的类信息柱状图&lt;/h3&gt;
&lt;p&gt;-XX:+PrintClassHistogram&lt;/p&gt;
&lt;h3 id=&quot;112查看jvm运行显示参数&quot;&gt;1.12.查看JVM运行显示参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintVMOptions&lt;/p&gt;
&lt;h3 id=&quot;113打印jvm显示和隐式默认参数&quot;&gt;1.13.打印JVM显示和隐式(默认)参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintCommandLineFlags&lt;/p&gt;
&lt;h3 id=&quot;114打印所有系统参数&quot;&gt;1.14.打印所有系统参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintFlagsFinal&lt;/p&gt;
&lt;h3 id=&quot;115在新生代和老年代使用串行回收器&quot;&gt;1.15.在新生代和老年代使用串行回收器&lt;/h3&gt;
&lt;p&gt;-XX:UseSerialGC&lt;/p&gt;
&lt;h3 id=&quot;116在新生代使用并行回收器&quot;&gt;1.16.在新生代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParNewGC&lt;/p&gt;
&lt;h3 id=&quot;117在老年代使用并行回收器&quot;&gt;1.17.在老年代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParallelOldGC&lt;/p&gt;
&lt;h3 id=&quot;118设置用于垃圾回收的线程数&quot;&gt;1.18.设置用于垃圾回收的线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelGCThreads&lt;/p&gt;
&lt;h3 id=&quot;119设置最大gc停顿时间&quot;&gt;1.19.设置最大GC停顿时间&lt;/h3&gt;
&lt;p&gt;-XX:MaxGCPauseMillis&lt;/p&gt;
&lt;h3 id=&quot;120设置吞吐量大小&quot;&gt;1.20.设置吞吐量大小&lt;/h3&gt;
&lt;p&gt;-XX:GCTimeRatio&lt;/p&gt;
&lt;h3 id=&quot;121打开开自适应gc策略&quot;&gt;1.21.打开开自适应GC策略&lt;/h3&gt;
&lt;p&gt;-XX:+UseAdaptiveSizePolicy&lt;/p&gt;
&lt;h3 id=&quot;122使用g1&quot;&gt;1.22.使用G1&lt;/h3&gt;
&lt;p&gt;-XX:+UseG1GC&lt;/p&gt;
&lt;h3 id=&quot;123设置停顿间隔&quot;&gt;1.23.设置停顿间隔&lt;/h3&gt;
&lt;p&gt;-XX:GCPauseIntervalMillis&lt;/p&gt;
&lt;h3 id=&quot;124使用cms&quot;&gt;1.24.使用CMS&lt;/h3&gt;
&lt;p&gt;-XX:+UseConcMarkSweepGC&lt;/p&gt;
&lt;h3 id=&quot;125设置cms线程数&quot;&gt;1.25.设置CMS线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelCMSThreads&lt;/p&gt;
&lt;h3 id=&quot;126设置cms触发时老年代比例&quot;&gt;1.26.设置CMS触发时，老年代比例&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;127设置cms在fullgc后是否进行碎片整理&quot;&gt;1.27.设置CMS在FullGC后是否进行碎片整理&lt;/h3&gt;
&lt;p&gt;-XX:+UseCMSCompactAtFullCollection&lt;/p&gt;
&lt;h3 id=&quot;128设置cms进行内存压缩前fullgc次数&quot;&gt;1.28.设置CMS进行内存压缩前，FullGC次数&lt;/h3&gt;
&lt;p&gt;-XX:CMSFullGCsBeforeCompaction&lt;/p&gt;
&lt;h3 id=&quot;129允许对类元数据回收&quot;&gt;1.29.允许对类元数据回收&lt;/h3&gt;
&lt;p&gt;-XX:+CMSClassUnloadingEnabled&lt;/p&gt;
&lt;h3 id=&quot;130设置cms触发时永久区比例仅在激活cmsclassunloadingenabled时有效&quot;&gt;1.30.设置CMS触发时，永久区比例,仅在激活CMSClassUnloadingEnabled时有效&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingPermOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;131只有达到阈值才执行cms-gc&quot;&gt;1.31.只有达到阈值才执行CMS GC&lt;/h3&gt;
&lt;p&gt;-XX:UseCMSInitiatingOccupancyOnly&lt;br /&gt;
##2.堆参数&lt;/p&gt;
&lt;h3 id=&quot;21初始堆空间&quot;&gt;2.1.初始堆空间&lt;/h3&gt;
&lt;p&gt;-Xms&lt;/p&gt;
&lt;h3 id=&quot;22最大堆空间&quot;&gt;2.2.最大堆空间&lt;/h3&gt;
&lt;p&gt;-Xmx&lt;/p&gt;
&lt;h3 id=&quot;23设置新生代大小&quot;&gt;2.3.设置新生代大小&lt;/h3&gt;
&lt;p&gt;-Xmn&lt;/p&gt;
&lt;h3 id=&quot;24设置新生代中eden区和fromto区的比例&quot;&gt;2.4.设置新生代中eden区和from/to区的比例&lt;/h3&gt;
&lt;p&gt;-XX:SurvivorRatio&lt;br /&gt;
SurvivorRatio=eden/from=eden/to&lt;/p&gt;
&lt;h3 id=&quot;25设置新生代与老年代的比例&quot;&gt;2.5.设置新生代与老年代的比例&lt;/h3&gt;
&lt;p&gt;-XX:NewRatio&lt;br /&gt;
NewRatio=老年代/新生代&lt;/p&gt;
&lt;h3 id=&quot;26设置在内存溢出时到处整个堆信息&quot;&gt;2.6.设置在内存溢出时到处整个堆信息&lt;/h3&gt;
&lt;p&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/p&gt;
&lt;h3 id=&quot;27设置导出堆文件存放路径&quot;&gt;2.7.设置导出堆文件存放路径&lt;/h3&gt;
&lt;p&gt;-XX:HeapDumpPath&lt;br /&gt;
与-XX:+HeapDumpOnOutOfMemoryError配合&lt;/p&gt;
&lt;h3 id=&quot;28设置大对象直接进入老年代的阈值&quot;&gt;2.8.设置大对象直接进入老年代的阈值&lt;/h3&gt;
&lt;p&gt;-XX:MaxTenuringThreshold&lt;br /&gt;
##3.	非堆参数&lt;/p&gt;
&lt;h3 id=&quot;31最大直接内存&quot;&gt;3.1.最大直接内存&lt;/h3&gt;
&lt;p&gt;-XX:MaxDirectMemorySize&lt;br /&gt;
如果不设置，则默认与-Xmx相同&lt;/p&gt;
&lt;h3 id=&quot;32每个线程的栈大小&quot;&gt;3.2.每个线程的栈大小&lt;/h3&gt;
&lt;p&gt;-Xss&lt;/p&gt;
&lt;h3 id=&quot;33打开tlab&quot;&gt;3.3.打开TLAB&lt;/h3&gt;
&lt;p&gt;-XX:+UseTLAB&lt;/p&gt;
&lt;h3 id=&quot;34打印tlab相关信息&quot;&gt;3.4.打印TLAB相关信息&lt;/h3&gt;
&lt;p&gt;-XX:+PrintTLAB&lt;br /&gt;
JDK9+不支持&lt;/p&gt;
&lt;h3 id=&quot;35tlab大小设置&quot;&gt;3.5.TLAB大小设置&lt;/h3&gt;
&lt;p&gt;-XX:TLABSize&lt;/p&gt;
&lt;h3 id=&quot;36设置tlab大小自动调整&quot;&gt;3.6.设置TLAB大小自动调整&lt;/h3&gt;
&lt;p&gt;-XX:+ResizeTLAB&lt;br /&gt;
##4.其他参数&lt;/p&gt;
&lt;h3 id=&quot;41设置工作模式为客户端&quot;&gt;4.1.设置工作模式为客户端&lt;/h3&gt;
&lt;p&gt;-client&lt;/p&gt;
&lt;h3 id=&quot;42设置工作模式为服务端&quot;&gt;4.2.设置工作模式为服务端&lt;/h3&gt;
&lt;p&gt;-server&lt;/p&gt;
&lt;h3 id=&quot;43禁用systemgc显示gc&quot;&gt;4.3.禁用System.gc()（显示GC）&lt;/h3&gt;
&lt;p&gt;-XX:+DisableExplicitGC&lt;/p&gt;
&lt;h3 id=&quot;44设置并发处理显示gc&quot;&gt;4.4.设置并发处理显示GC&lt;/h3&gt;
&lt;p&gt;-XX:+ExplicitGCInvokesConcurrent&lt;/p&gt;
&lt;h3 id=&quot;45后台编译&quot;&gt;4.5.后台编译&lt;/h3&gt;
&lt;p&gt;-XX:+BackgroundCompilation&lt;/p&gt;
&lt;h3 id=&quot;46开启逃逸分析&quot;&gt;4.6.开启逃逸分析&lt;/h3&gt;
&lt;p&gt;-XX:+DoEscapeAnalysis&lt;br /&gt;
仅在server模式下有效&lt;/p&gt;
&lt;h3 id=&quot;47打开标量替换&quot;&gt;4.7.打开标量替换&lt;/h3&gt;
&lt;p&gt;-XX:+EliminateAllocation&lt;/p&gt;
&lt;h3 id=&quot;48开启解释执行模式&quot;&gt;4.8.开启解释执行模式&lt;/h3&gt;
&lt;p&gt;-Xint&lt;/p&gt;
&lt;h3 id=&quot;49开启编译模式&quot;&gt;4.9.开启编译模式&lt;/h3&gt;
&lt;p&gt;-Xcomp&lt;/p&gt;
&lt;h3 id=&quot;410开启混合模式民&quot;&gt;4.10.开启混合模式民，&lt;/h3&gt;
&lt;p&gt;-Xmixed&lt;/p&gt;</content><author><name></name></author><summary type="html">零、参考资料 Java虚拟机规范(Java SE 8版) Java语言规范基于Java SE 8 深入理解Java虚拟机——JVM高级特性与最佳实践 实战Java虚拟机——JVM故障诊断与性能优化 垃圾回收的算法与实现 深入理解计算机系统 Stackoverflow:  https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections OpenJdk：  https://openjdk.java.net/jeps/122 Oracle官方DOC：  https://docs.oracle.com/javase/8/javase-books.htm  https://docs.oracle.com/en/java/javase/13/  https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html</summary></entry><entry><title type="html">JVM故障诊断与优化笔记一</title><link href="http://localhost:4000/jekyll/update/2012/12/12/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%B8%80.html" rel="alternate" type="text/html" title="JVM故障诊断与优化笔记一" /><published>2012-12-12T20:10:54+08:00</published><updated>2012-12-12T20:10:54+08:00</updated><id>http://localhost:4000/jekyll/update/2012/12/12/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%B8%80</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2012/12/12/JVM%E6%95%85%E9%9A%9C%E8%AF%8A%E6%96%AD%E4%B8%8E%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0%E4%B8%80.html">&lt;h1 id=&quot;零参考资料&quot;&gt;零、参考资料&lt;/h1&gt;
&lt;p&gt;Java虚拟机规范(Java SE 8版)&lt;br /&gt;
Java语言规范基于Java SE 8&lt;br /&gt;
深入理解Java虚拟机——JVM高级特性与最佳实践&lt;br /&gt;
实战Java虚拟机——JVM故障诊断与性能优化&lt;br /&gt;
垃圾回收的算法与实现&lt;br /&gt;
深入理解计算机系统&lt;br /&gt;
Stackoverflow:&lt;br /&gt;
 https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections&lt;br /&gt;
OpenJdk：&lt;br /&gt;
 https://openjdk.java.net/jeps/122&lt;br /&gt;
Oracle官方DOC：&lt;br /&gt;
 https://docs.oracle.com/javase/8/javase-books.htm&lt;br /&gt;
 https://docs.oracle.com/en/java/javase/13/&lt;br /&gt;
 https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf&lt;br /&gt;
 https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html&lt;/p&gt;

&lt;h1 id=&quot;一常用jvm参数&quot;&gt;一、常用JVM参数&lt;/h1&gt;
&lt;h2 id=&quot;1gc参数&quot;&gt;1.GC参数&lt;/h2&gt;
&lt;h3 id=&quot;11打印gc基本日志&quot;&gt;1.1.打印GC基本日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGC   JDK9+:  -Xlog:gc&lt;/p&gt;
&lt;h3 id=&quot;12打印gc详细日志&quot;&gt;1.2.打印GC详细日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCDetails   JDK9+:  -Xlog:gc*&lt;br /&gt;
-XX:PrintGCDetails 还会使JVM在退出前打印堆详细信息&lt;/p&gt;
&lt;h3 id=&quot;13打印gc时堆的全面信息&quot;&gt;1.3.打印GC时堆的全面信息&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintHeapAtGC  JDK9+:移除&lt;/p&gt;
&lt;h3 id=&quot;14打印gc发生时间&quot;&gt;1.4.打印GC发生时间&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:PrintGCTimeStamps   JDK9+:  -Xlog:gc*已包含&lt;/p&gt;
&lt;h3 id=&quot;15打印程序执行时间&quot;&gt;1.5.打印程序执行时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationConcurrentTime&lt;/p&gt;
&lt;h3 id=&quot;16打印程序因stw而停顿的时间&quot;&gt;1.6.打印程序因STW而停顿的时间&lt;/h3&gt;
&lt;p&gt;-XX:+PrintGCApplicationStoppedTime&lt;/p&gt;
&lt;h3 id=&quot;17打印软引用弱引用虚引用和finallize队列信息&quot;&gt;1.7.打印软引用、弱引用、虚引用和Finallize队列信息&lt;/h3&gt;
&lt;p&gt;JDK8: +PrintReferenceGC   JDK9+移除&lt;/p&gt;
&lt;h3 id=&quot;18输出gc信息至文本&quot;&gt;1.8.输出GC信息至文本&lt;/h3&gt;
&lt;p&gt;JDK8:-Xloggc:log/${filePath}   JDK9+:-Xlog:gc:log/${filePath}&lt;/p&gt;
&lt;h3 id=&quot;19打印类加载日志&quot;&gt;1.9.打印类加载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassLoading  JDK9+:  -Xlog:class+load=info&lt;/p&gt;
&lt;h3 id=&quot;110打印类卸载日志&quot;&gt;1.10.打印类卸载日志&lt;/h3&gt;
&lt;p&gt;JDK8: -XX:+TraceClassUnLoading  JDK9+:  -Xlog:class+unload=info&lt;/p&gt;
&lt;h3 id=&quot;111显示当前的类信息柱状图&quot;&gt;1.11.显示当前的类信息柱状图&lt;/h3&gt;
&lt;p&gt;-XX:+PrintClassHistogram&lt;/p&gt;
&lt;h3 id=&quot;112查看jvm运行显示参数&quot;&gt;1.12.查看JVM运行显示参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintVMOptions&lt;/p&gt;
&lt;h3 id=&quot;113打印jvm显示和隐式默认参数&quot;&gt;1.13.打印JVM显示和隐式(默认)参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintCommandLineFlags&lt;/p&gt;
&lt;h3 id=&quot;114打印所有系统参数&quot;&gt;1.14.打印所有系统参数&lt;/h3&gt;
&lt;p&gt;-XX:+PrintFlagsFinal&lt;/p&gt;
&lt;h3 id=&quot;115在新生代和老年代使用串行回收器&quot;&gt;1.15.在新生代和老年代使用串行回收器&lt;/h3&gt;
&lt;p&gt;-XX:UseSerialGC&lt;/p&gt;
&lt;h3 id=&quot;116在新生代使用并行回收器&quot;&gt;1.16.在新生代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParNewGC&lt;/p&gt;
&lt;h3 id=&quot;117在老年代使用并行回收器&quot;&gt;1.17.在老年代使用并行回收器&lt;/h3&gt;
&lt;p&gt;-XX:+UseParallelOldGC&lt;/p&gt;
&lt;h3 id=&quot;118设置用于垃圾回收的线程数&quot;&gt;1.18.设置用于垃圾回收的线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelGCThreads&lt;/p&gt;
&lt;h3 id=&quot;119设置最大gc停顿时间&quot;&gt;1.19.设置最大GC停顿时间&lt;/h3&gt;
&lt;p&gt;-XX:MaxGCPauseMillis&lt;/p&gt;
&lt;h3 id=&quot;120设置吞吐量大小&quot;&gt;1.20.设置吞吐量大小&lt;/h3&gt;
&lt;p&gt;-XX:GCTimeRatio&lt;/p&gt;
&lt;h3 id=&quot;121打开开自适应gc策略&quot;&gt;1.21.打开开自适应GC策略&lt;/h3&gt;
&lt;p&gt;-XX:+UseAdaptiveSizePolicy&lt;/p&gt;
&lt;h3 id=&quot;122使用g1&quot;&gt;1.22.使用G1&lt;/h3&gt;
&lt;p&gt;-XX:+UseG1GC&lt;/p&gt;
&lt;h3 id=&quot;123设置停顿间隔&quot;&gt;1.23.设置停顿间隔&lt;/h3&gt;
&lt;p&gt;-XX:GCPauseIntervalMillis&lt;/p&gt;
&lt;h3 id=&quot;124使用cms&quot;&gt;1.24.使用CMS&lt;/h3&gt;
&lt;p&gt;-XX:+UseConcMarkSweepGC&lt;/p&gt;
&lt;h3 id=&quot;125设置cms线程数&quot;&gt;1.25.设置CMS线程数&lt;/h3&gt;
&lt;p&gt;-XX:ParallelCMSThreads&lt;/p&gt;
&lt;h3 id=&quot;126设置cms触发时老年代比例&quot;&gt;1.26.设置CMS触发时，老年代比例&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;127设置cms在fullgc后是否进行碎片整理&quot;&gt;1.27.设置CMS在FullGC后是否进行碎片整理&lt;/h3&gt;
&lt;p&gt;-XX:+UseCMSCompactAtFullCollection&lt;/p&gt;
&lt;h3 id=&quot;128设置cms进行内存压缩前fullgc次数&quot;&gt;1.28.设置CMS进行内存压缩前，FullGC次数&lt;/h3&gt;
&lt;p&gt;-XX:CMSFullGCsBeforeCompaction&lt;/p&gt;
&lt;h3 id=&quot;129允许对类元数据回收&quot;&gt;1.29.允许对类元数据回收&lt;/h3&gt;
&lt;p&gt;-XX:+CMSClassUnloadingEnabled&lt;/p&gt;
&lt;h3 id=&quot;130设置cms触发时永久区比例仅在激活cmsclassunloadingenabled时有效&quot;&gt;1.30.设置CMS触发时，永久区比例,仅在激活CMSClassUnloadingEnabled时有效&lt;/h3&gt;
&lt;p&gt;-XX:CMSInitiatingPermOccupancyFraction&lt;/p&gt;
&lt;h3 id=&quot;131只有达到阈值才执行cms-gc&quot;&gt;1.31.只有达到阈值才执行CMS GC&lt;/h3&gt;
&lt;p&gt;-XX:UseCMSInitiatingOccupancyOnly&lt;br /&gt;
##2.堆参数&lt;/p&gt;
&lt;h3 id=&quot;21初始堆空间&quot;&gt;2.1.初始堆空间&lt;/h3&gt;
&lt;p&gt;-Xms&lt;/p&gt;
&lt;h3 id=&quot;22最大堆空间&quot;&gt;2.2.最大堆空间&lt;/h3&gt;
&lt;p&gt;-Xmx&lt;/p&gt;
&lt;h3 id=&quot;23设置新生代大小&quot;&gt;2.3.设置新生代大小&lt;/h3&gt;
&lt;p&gt;-Xmn&lt;/p&gt;
&lt;h3 id=&quot;24设置新生代中eden区和fromto区的比例&quot;&gt;2.4.设置新生代中eden区和from/to区的比例&lt;/h3&gt;
&lt;p&gt;-XX:SurvivorRatio&lt;br /&gt;
SurvivorRatio=eden/from=eden/to&lt;/p&gt;
&lt;h3 id=&quot;25设置新生代与老年代的比例&quot;&gt;2.5.设置新生代与老年代的比例&lt;/h3&gt;
&lt;p&gt;-XX:NewRatio&lt;br /&gt;
NewRatio=老年代/新生代&lt;/p&gt;
&lt;h3 id=&quot;26设置在内存溢出时到处整个堆信息&quot;&gt;2.6.设置在内存溢出时到处整个堆信息&lt;/h3&gt;
&lt;p&gt;-XX:+HeapDumpOnOutOfMemoryError&lt;/p&gt;
&lt;h3 id=&quot;27设置导出堆文件存放路径&quot;&gt;2.7.设置导出堆文件存放路径&lt;/h3&gt;
&lt;p&gt;-XX:HeapDumpPath&lt;br /&gt;
与-XX:+HeapDumpOnOutOfMemoryError配合&lt;/p&gt;
&lt;h3 id=&quot;28设置大对象直接进入老年代的阈值&quot;&gt;2.8.设置大对象直接进入老年代的阈值&lt;/h3&gt;
&lt;p&gt;-XX:MaxTenuringThreshold&lt;br /&gt;
##3.	非堆参数&lt;/p&gt;
&lt;h3 id=&quot;31最大直接内存&quot;&gt;3.1.最大直接内存&lt;/h3&gt;
&lt;p&gt;-XX:MaxDirectMemorySize&lt;br /&gt;
如果不设置，则默认与-Xmx相同&lt;/p&gt;
&lt;h3 id=&quot;32每个线程的栈大小&quot;&gt;3.2.每个线程的栈大小&lt;/h3&gt;
&lt;p&gt;-Xss&lt;/p&gt;
&lt;h3 id=&quot;33打开tlab&quot;&gt;3.3.打开TLAB&lt;/h3&gt;
&lt;p&gt;-XX:+UseTLAB&lt;/p&gt;
&lt;h3 id=&quot;34打印tlab相关信息&quot;&gt;3.4.打印TLAB相关信息&lt;/h3&gt;
&lt;p&gt;-XX:+PrintTLAB&lt;br /&gt;
JDK9+不支持&lt;/p&gt;
&lt;h3 id=&quot;35tlab大小设置&quot;&gt;3.5.TLAB大小设置&lt;/h3&gt;
&lt;p&gt;-XX:TLABSize&lt;/p&gt;
&lt;h3 id=&quot;36设置tlab大小自动调整&quot;&gt;3.6.设置TLAB大小自动调整&lt;/h3&gt;
&lt;p&gt;-XX:+ResizeTLAB&lt;br /&gt;
##4.其他参数&lt;/p&gt;
&lt;h3 id=&quot;41设置工作模式为客户端&quot;&gt;4.1.设置工作模式为客户端&lt;/h3&gt;
&lt;p&gt;-client&lt;/p&gt;
&lt;h3 id=&quot;42设置工作模式为服务端&quot;&gt;4.2.设置工作模式为服务端&lt;/h3&gt;
&lt;p&gt;-server&lt;/p&gt;
&lt;h3 id=&quot;43禁用systemgc显示gc&quot;&gt;4.3.禁用System.gc()（显示GC）&lt;/h3&gt;
&lt;p&gt;-XX:+DisableExplicitGC&lt;/p&gt;
&lt;h3 id=&quot;44设置并发处理显示gc&quot;&gt;4.4.设置并发处理显示GC&lt;/h3&gt;
&lt;p&gt;-XX:+ExplicitGCInvokesConcurrent&lt;/p&gt;
&lt;h3 id=&quot;45后台编译&quot;&gt;4.5.后台编译&lt;/h3&gt;
&lt;p&gt;-XX:+BackgroundCompilation&lt;/p&gt;
&lt;h3 id=&quot;46开启逃逸分析&quot;&gt;4.6.开启逃逸分析&lt;/h3&gt;
&lt;p&gt;-XX:+DoEscapeAnalysis&lt;br /&gt;
仅在server模式下有效&lt;/p&gt;
&lt;h3 id=&quot;47打开标量替换&quot;&gt;4.7.打开标量替换&lt;/h3&gt;
&lt;p&gt;-XX:+EliminateAllocation&lt;/p&gt;
&lt;h3 id=&quot;48开启解释执行模式&quot;&gt;4.8.开启解释执行模式&lt;/h3&gt;
&lt;p&gt;-Xint&lt;/p&gt;
&lt;h3 id=&quot;49开启编译模式&quot;&gt;4.9.开启编译模式&lt;/h3&gt;
&lt;p&gt;-Xcomp&lt;/p&gt;
&lt;h3 id=&quot;410开启混合模式民&quot;&gt;4.10.开启混合模式民，&lt;/h3&gt;
&lt;p&gt;-Xmixed&lt;/p&gt;</content><author><name></name></author><summary type="html">零、参考资料 Java虚拟机规范(Java SE 8版) Java语言规范基于Java SE 8 深入理解Java虚拟机——JVM高级特性与最佳实践 实战Java虚拟机——JVM故障诊断与性能优化 垃圾回收的算法与实现 深入理解计算机系统 Stackoverflow:  https://stackoverflow.com/questions/16549066/java-major-and-minor-garbage-collections OpenJdk：  https://openjdk.java.net/jeps/122 Oracle官方DOC：  https://docs.oracle.com/javase/8/javase-books.htm  https://docs.oracle.com/en/java/javase/13/  https://docs.oracle.com/javase/specs/jvms/se8/jvms8.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/mooc/JVM_Troubleshooting/week1/lesson1.pdf  https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html</summary></entry></feed>